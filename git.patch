From: Raymond Wooninck <tittiatcoke@gmail.com>
Date: Thu, 07 Mar 2013 11:46:03 +0000
Subject: Also check if the version of systemd is supporting the upower functions
X-Git-Url: http://quickgit.kde.org/?p=kde-workspace.git&a=commitdiff&h=cc59979ffce8a01076fd9ffe76910b16756d8d87
---
Also check if the version of systemd is supporting the upower functions

BUG: 316219
REVIEW: 109336
---


--- a/powerdevil/daemon/backends/upower/powerdevilupowerbackend.cpp
+++ b/powerdevil/daemon/backends/upower/powerdevilupowerbackend.cpp
@@ -34,6 +34,21 @@
 #include "login1suspendjob.h"
 
 #define HELPER_ID "org.kde.powerdevil.backlighthelper"
+
+bool checkSystemdVersion(uint requiredVersion)
+{
+    bool ok;
+
+    QDBusInterface systemdIface("org.freedesktop.systemd1", "/org/freedesktop/systemd1", "org.freedesktop.systemd1.Manager",
+                                QDBusConnection::systemBus(), 0);
+    uint version = systemdIface.property("Version").toString().section(' ', 1).toUInt(&ok);
+    if (ok) {
+       return (version >= requiredVersion);
+    } else {
+       kDebug() << "Unknown version string from Systemd";
+       return false;
+    }
+}
 
 PowerDevilUPowerBackend::PowerDevilUPowerBackend(QObject* parent)
     : BackendInterface(parent),
@@ -123,7 +138,7 @@
 
     // Supported suspend methods
     SuspendMethods supported = UnknownSuspendMethod;
-    if (m_login1Interface) {
+    if (m_login1Interface && checkSystemdVersion(195)) {
         QDBusPendingReply<QString> canSuspend = m_login1Interface.data()->asyncCall("CanSuspend");
         canSuspend.waitForFinished();
         if (canSuspend.isValid() && (canSuspend.value() == "yes" || canSuspend.value() == "challenge"))
@@ -151,11 +166,7 @@
     }
 
     // "resuming" signal
-    QDBusInterface systemdIface("org.freedesktop.systemd1", "/org/freedesktop/systemd1", "org.freedesktop.systemd1.Manager",
-                                QDBusConnection::systemBus(), this);
-    int version = systemdIface.property("Version").toString().section(' ', 1).toInt();
-
-    if (m_login1Interface && version > 197) {
+    if (m_login1Interface && checkSystemdVersion(198)) {
         connect(m_login1Interface.data(), SIGNAL(PrepareForSleep(bool)), this, SLOT(slotLogin1Resuming(bool)));
     } else {
         connect(m_upowerInterface, SIGNAL(Resuming()), this, SIGNAL(resumeFromSuspend()));
@@ -280,7 +291,7 @@
 
 KJob* PowerDevilUPowerBackend::suspend(PowerDevil::BackendInterface::SuspendMethod method)
 {
-    if (m_login1Interface) {
+    if (m_login1Interface && checkSystemdVersion(195)) {
         return new Login1SuspendJob(m_login1Interface.data(), method, supportedSuspendMethods());
     } else {
         return new UPowerSuspendJob(m_upowerInterface, method, supportedSuspendMethods());

From: Lukáš Tinkl <lukas@kde.org>
Date: Tue, 12 Mar 2013 16:01:00 +0000
Subject: stop leaking the login1 suspend job
X-Git-Url: http://quickgit.kde.org/?p=kde-workspace.git&a=commitdiff&h=7a01d55b55591fb3d73281541116b36e72f49e24
---
stop leaking the login1 suspend job

BUG: 316473
FIXED-IN: 4.10.2
---


--- a/powerdevil/daemon/backends/upower/login1suspendjob.cpp
+++ b/powerdevil/daemon/backends/upower/login1suspendjob.cpp
@@ -35,6 +35,8 @@
     kDebug() << "Starting Login1 suspend job";
     m_method = method;
     m_supported = supported;
+
+    connect(m_login1Interface, SIGNAL(PrepareForSleep(bool)), this, SLOT(slotLogin1Resuming(bool)));
 }
 
 Login1SuspendJob::~Login1SuspendJob()
@@ -95,6 +97,12 @@
     watcher->deleteLater();
 }
 
+void Login1SuspendJob::slotLogin1Resuming(bool active)
+{
+    if (!active)
+        emitResult();
+}
+
 
 #include "login1suspendjob.moc"
 

--- a/powerdevil/daemon/backends/upower/login1suspendjob.h
+++ b/powerdevil/daemon/backends/upower/login1suspendjob.h
@@ -44,6 +44,7 @@
 private Q_SLOTS:
     void doStart();
     void sendResult(QDBusPendingCallWatcher* watcher);
+    void slotLogin1Resuming(bool active);
 
 private:
     QDBusInterface *m_login1Interface;

